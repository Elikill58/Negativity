import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

plugins {
    id 'java-library'
    id 'io.github.goooler.shadow' version '8.1.7'
}

shadowJar {
    archiveBaseName.set('Negativity')
    archiveClassifier.set(null)
    
    mergeServiceFiles()
}


task prepareServer(type: Copy) {
    from shadowJar.outputs
    def pluginRename = System.getProperty('plugins.rename')
    if(pluginRename == null || pluginRename.toBoolean()) {
    	rename { 'Negativity.jar' }
    }
    def pluginDir = System.getProperty('plugins.dir')
    if (pluginDir == null) {
        enabled(false)
    } else {
        into pluginDir
    }
}

build.dependsOn shadowJar

tasks.named('javadoc') {
    enabled false
}

subprojects {
    apply plugin: 'java-library'

    group = 'com.elikill58'

    repositories {
        mavenCentral()
        maven {
            name 'jitpack'
            url 'https://jitpack.io/'
        }
        maven {
            name 'codemc'
            url 'https://repo.codemc.org/repository/maven-public/'
        }
        maven {
            name 'Sonatype'
            url 'https://oss.sonatype.org/content/groups/public/'
        }
        maven {
            name 'eliapp'
            url 'https://repo.eliapp.fr:8081/repository/internal/'
        }
        maven {
            name = "ViaVersion"
            url = "https://repo.viaversion.com"
        }
    }

    dependencies {
        compileOnly 'com.google.code.findbugs:jsr305:3.0.2'
        compileOnly 'org.checkerframework:checker-qual:3.7.0'
    
        compileOnly 'io.netty:netty-all:4.1.85.Final'
    }

    java.toolchain.languageVersion = JavaLanguageVersion.of(8)

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    tasks.withType(Javadoc) {
        if (project.name != 'common') {
            dependsOn ':common:javadoc'
        }
        options.encoding = 'UTF-8'
        setFailOnError(false) // TODO fix all javadoc errors
        destinationDir = file("${rootProject.buildDir}/docs/javadoc/${project.path.substring(1).replace(':', '-')}")
        options {
            if (project.name != 'common') {
                links '../common'
            }
            links "https://docs.oracle.com/javase/${java.toolchain.languageVersion.get().asInt()}/docs/api/"
        }
    }

    tasks.withType(ProcessResources) {
        filteringCharset = 'UTF-8'
    }

    if (project.name != "common") {
        tasks.withType(ShadowJar).configureEach {
            dependencies {
                exclude(dependency("com.viaversion:opennbt:.*"))
                exclude(dependency("org.yaml:snakeyaml:.*"))
                exclude(dependency("it.unimi.dsi:fastutil:.*"))
            }
        }
    }
}
