###################################################################
#                                                                 #
#                            Negativity                           #
#                      AntiCheat by Elikill58                     #
#                                                                 #
#              If you have a problem or a suggestion,             #
#                    You can contact me on:                       #
#                  - Discord: @Elikill58#0743                     #
#       - my Discord server: https://discord.gg/KHRVTX2           #
#               - Mail: arpetzouille@gmail.com                    #
#                   - SpigotMC: Elikill58                         #
#                  - Minecraft.fr: Elikill                        #
#                                                                 #
###################################################################

log_alerts: true
log_alerts_in_console: true
tps_alert_stop: 19 # if you get less TPS then this value, all alert will be disabled

commands {
  # Options to enable or disable commands
  # Manage /nreport (Alias: /report)
  report: true
  # Manage Mod command :
  # Manage /nban (Alias: /ban)
  # DON'T FORGET TO ENABLE BAN BELOW
  ban: true
  # Manage /nunban (Alias: /unban)
  # DON'T FORGET TO ENABLE BAN BELOW
  unban: true
  # Manage /nkick (Alias: /kick)
  kick: true
  # Manage /nmod (Alias: /mod)
  mod: true

  # Manage /nlang (Alias: /lang)
  lang: true
}

Database {
  isActive: false
  # To get the information. We use the player uuid to get the information.
  # We get only what you write. We never add or remove something.
  # We don't save your private information about your database
  url: "127.0.0.1/myDb"
  user: root
  password: "myPassword"
}

inventory {
  alerts {
    no_started_verif_cheat: false # Don't see if the player isn't analsye for this cheat
    only_cheat_active: true # The cheat with an active detection
  }
  inv_freeze_active: true
}

# Bypass when you add effects
#
items {
  #ITEM_NAME:
  # when: WHEN_DISABLE_DETECTION
  # cheats: CHEATS_DETECTION_DISABLED (it's the ID of the cheats like fly, speed)
  #
  # when available:
  # always : disable when the player get it in their hand
  # right_click : disale when the player right click
  # left_click : disale when the player left click
  # looking : disale when the player is looking a specific block
  # below : disable according to the block below the player
  #
  COMPASS {
    when: "always"
    cheats: "speed,fly"
  }
}

# Configuration of the permissions subsystem. For more information
# see https://github.com/Elikill58/Negativity/wiki/Permissions
Permissions {
  # The checker indicates if a player has a specific permission.
  # By default only 'platform' is available
  checker: platform
  check {
    default: "negativity.check"
  }
  showAlert {
    default: "negativity.alert"
  }
  showReport {
    default: "negativity.seereport"
  }
  reload {
    default: "negativity.reload"
  }
  verif {
    default: "negativity.verif"
  }
  manageCheat {
    default: "negativity.managecheat"
  }
  reload {
    default: "negativity.reload"
  }
  report_wait {
    default: "negativity.reportwait"
  }
  report {
    default: "negativity.report"
  }
  ban {
    default: "negativity.ban"
  }
  unban {
    default: "negativity.unban"
  }
  mod {
    default: "negativity.mod"
  }
  lang {
    default: "negativity.lang"
  }
  bypass {
    active: false
    ban {
      # Bypass ban (auto and /nban)
      default: "negativity.bypass.ban"
    }
    all {
      default: "negativity.bypass.all"
    }
    airplace {
      default: "negativity.bypass.airplace"
    }
    forcefield {
      default: "negativity.bypass.forcefield"
    }
    fastplace {
      default: "negativity.bypass.fastplace"
    }
    speed {
      default: "negativity.bypass.speed"
    }
    autoclick {
      default: "negativity.bypass.autoclick"
    }
    fly {
      default: "negativity.bypass.fly"
    }
    antipotion {
      default: "negativity.bypass.antipotion"
    }
    fasteat {
      default: "negativity.bypass.fasteat"
    }
    autoregen {
      default: "negativity.bypass.autoregen"
    }
    antiknockback {
      default: "negativity.bypass.antiknockback"
    }
    jesus {
      default: "negativity.bypass.jesus"
    }
    nofall {
      default: "negativity.bypass.nofall"
    }
    blink {
      default: "negativity.bypass.blink"
    }
    spider {
      default: "negativity.bypass.spider"
    }
    fastbow {
      default: "negativity.bypass.fastbow"
    }
    scaffold {
      default: "negativity.bypass.scaffold"
    }
    step {
      default: "negativity.bypass.step"
    }
    noslowdown {
      default: "negativity.bypass.noslowdown"
    }
    fastladder {
      default: "negativity.bypass.fastladder"
    }
    phase {
      default: "negativity.bypass.phase"
    }
    autosteal {
      default: "negativity.bypass.autosteal"
    }
    nuker {
      default: "negativity.bypass.nuker"
    }
    airjump {
      default: "negativity.bypass.airjump"
    }
    chat {
      default: "negativity.bypass.chat"
    }
    noweb {
      default: "negativity.bypass.noweb"
    }
    critical {
      default: "negativity.bypass.critical"
    }
    inventorymove {
      default: "negativity.bypass.inventorymove"
    }
    faststairs {
      default: "negativity.bypass.faststairs"
    }
    nopitchlimit {
      default: "negativity.bypass.nopitchlimit"
    }
    sneak {
      default: "negativity.bypass.sneak"
    }
    timer {
      default: "negativity.bypass.timer"
    }
  }
}

Translation {
  active: false # enable or disable the translation
  lang_available: [
    "ar_EG"
    "cs_CZ"
    "de_DE"
    "en_US"
    "es_ES"
    "fr_FR"
    "it_IT"
    "nl_NL"
    "no_NO"
    "pl_PL"
    "pt_BR"
    "ro_RO"
    "ru_RU"
    "sq_SQ"
    "sv_SV"
    "vi_VN"
    "zh_CN"
  ]
  default: "en_US"
  # The provider used to get translated messages, useful if you want to customize the way Negativity gets its messages.
  # The only one available out-of-the-box is "platform".
  provider: "platform"
}

# The time between 2 /report
# in millisecondes
time_between_report: 1000

# The time between 2 alerts
# in milliseconds
# -1 to disable
time_between_alert: 2000

# Configuration of the bans subsystem. For more information
# see https://github.com/Elikill58/Negativity/wiki/Bans
ban {
  active: false
  # Processors manages bans. Only one processor can be used at the time.
  # Available processors :
  # - file : Saves bans under the ban/ directory of the configuration directory
  # - database : Saves bans in a database. Needs a configured database (see the Database category)
  # - command : Runs commands to ban or unban
  # - sponge : Uses Sponge's BanService
  # - proxy : Forwards ban execution and revocations to the proxy companion plugin.
  #   You must enable bans on the proxy plugin's configuration for it to work
  # Defaults to "file"
  processor: "file"
  # Commands to execute when using the "command" processor
  # You can execute as many commands as you want. Order is respected.
  #
  # Available placeholders:
  # %uuid% : uuid of banned player
  # %name% : name of banned player
  # %ip% : ip of the banned player
  # %reason% : detected cheat
  # %alert% : number of alerts for the detected cheat that triggered the ban
  # %all_alert% : all alerts for the detected cheat since you added Negativity on your server
  command {
    ban: ["ban %uuid% %reason%"]
    unban: ["unban %uuid% %reason%"]
  }
  reliability_need: 95
  alert_need: 10
  # How to calculate the time during the player will be banned
  # IN MILLISECONDES
  time {
    # %reliability% : reliability of last alert
    # %alert% : number of alert sent
    calculator: "360000000 + (%reliability% * 20 * %alert%)"
  }
  def {
    # Number that you need to be ban definitly
    ban_time: 2
  }
  # Log expired or revoked bans when using the "file" processor
  file.log_bans: true
  # Log expired or revoked bans when using the "database" processor
  database.log_bans: true
}

# Accounts hold player-specific data of the plugin, like their language and alerts count.
#
# The ID of the storage to use.
#
# The following are available out-of-the-box:
# - file : stored in files under ./config/negativity/user/
# - database : uses a database
# Defaults to "file"
accounts.storage.id="file"


# A verification is used to monitor a player's activity.
verif {
  # The default duration of a verification, in ticks (20 ticks = 1 second)
  time: 200
  # If true, mutes alerts a player generates when it is being verified
  # Alerts for a specific cheat can be forcibly muted by setting cheats.<cheat>.check_in_verif to false
  disable_alert_on_verif: false

  storage {
    # The ID of the storage to use.
    #
    # The following are available out-of-the-box:
    # - file : stored in files under ./config/negativity/verif/
    # - database : uses a database
    # Defaults to "file"
    id: "file"
  }
}

# Per-cheat configuration. For more information about specific cheats
# and their detections see https://github.com/Elikill58/Negativity/wiki/Cheat
cheats {
  #
  # WARNING: An auto verification of all cheat can be create some lag on your server.
  #

  # AirPlace is when someone place a block on the air or on liquid (and not replace it)
  airplace {
    ping: 200
    exact_name: "AirPlace"
    isActive: true
    reliability_alert: 60
    setBack: false
    kick: false
    alert_to_kick: 5
    check_in_verif: true
  }
  forcefield {
    reach: 3.9
    ghost_disabled: false
    ping: 150
    exact_name: "ForceField"
    isActive: true
    reliability_alert: 60
    setBack: false
    kick: false
    alert_to_kick: 5
    check_in_verif: true
  }
  jesus {
    ping: 150
    exact_name: "Jesus"
    isActive: true
    reliability_alert: 60
    setBack: false
    kick: false
    alert_to_kick: 5
    check_in_verif: true
  }
  antipotion {
    ping: 150
    exact_name: "AntiPotion"
    isActive: true
    reliability_alert: 60
    setBack: false
    kick: false
    alert_to_kick: 5
    check_in_verif: true
  }
  nofall {
    kill: false
    kill-reliability: 90
    ping: 150
    exact_name: "NoFall"
    isActive: true
    reliability_alert: 60
    setBack: false
    kick: false
    alert_to_kick: 5
    check_in_verif: true
  }
  fasteat {
    ping: 150
    exact_name: "FastEat"
    isActive: true
    reliability_alert: 60
    setBack: false
    kick: false
    alert_to_kick: 5
    check_in_verif: true
  }
  fastplace {
    ping: 150
    exact_name: "FastPlace"
    isActive: true
    # Max time between 2 blocks placed
    # In milliseconds
    time_2_place: 50
    reliability_alert: 60
    setBack: false
    kick: false
    alert_to_kick: 5
    check_in_verif: true
  }
  speed {
    ping: 150
    exact_name: "Speed"
    isActive: true
    reliability_alert: 60
    setBack: false
    kick: false
    alert_to_kick: 5
    check_in_verif: true
  }
  autoclick {
    click_alert: 20
    ping: 150
    exact_name: "AutoClick"
    isActive: true
    reliability_alert: 60
    setBack: false
    kick: false
    alert_to_kick: 5
    check_in_verif: true
  }
  fly {
    ping: 150
    exact_name: "Fly"
    isActive: true
    reliability_alert: 60
    setBack: false
    kick: false
    alert_to_kick: 5
    check_in_verif: true
  }
  regen {
    ping: 150
    exact_name: "Regen"
    isActive: true
    reliability_alert: 60
    setBack: false
    kick: false
    alert_to_kick: 5
    check_in_verif: true
  }
  antiknockback {
    ping: 150
    exact_name: "AntiKnockback"
    isActive: true
    reliability_alert: 60
    setBack: false
    kick: false
    alert_to_kick: 5
    check_in_verif: true
  }
  blink {
    ping: 150
    exact_name: "Blink"
    isActive: true
    reliability_alert: 60
    setBack: false
    kick: false
    alert_to_kick: 5
    check_in_verif: true
  }
  fastbow {
    ping: 150
    exact_name: "FastBow"
    isActive: true
    reliability_alert: 60
    setBack: false
    kick: false
    alert_to_kick: 5
    check_in_verif: true
  }
  spider {
    ping: 150
    exact_name: "Spider"
    isActive: true
    reliability_alert: 60
    setBack: false
    kick: false
    alert_to_kick: 5
    check_in_verif: true
  }
  sneak {
    ping: 150
    exact_name: "Sneak"
    isActive: true
    reliability_alert: 60
    setBack: false
    kick: false
    alert_to_kick: 5
    check_in_verif: true
  }
  scaffold {
    ping: 150
    exact_name: "Scaffold"
    isActive: true
    reliability_alert: 60
    setBack: false
    kick: false
    alert_to_kick: 5
    check_in_verif: true
  }
  step {
    ping: 150
    exact_name: "Step"
    isActive: true
    reliability_alert: 60
    setBack: false
    kick: false
    alert_to_kick: 5
    check_in_verif: true
  }
  noslowdown {
    ping: 150
    exact_name: "NoSlowDown"
    isActive: true
    reliability_alert: 60
    setBack: false
    kick: false
    alert_to_kick: 5
    check_in_verif: true
  }
  fastladder {
    ping: 150
    exact_name: "FastLadder"
    isActive: true
    reliability_alert: 60
    setBack: false
    kick: false
    alert_to_kick: 5
    check_in_verif: true
  }
  phase {
    ping: 150
    exact_name: "Phase"
    isActive: true
    reliability_alert: 60
    setBack: false
    kick: false
    alert_to_kick: 5
    check_in_verif: true
  }
  autosteal {
    ping: 150
    exact_name: "AutoSteal"
    isActive: true
    reliability_alert: 60
    setBack: false
    kick: false
    alert_to_kick: 5
    check_in_verif: true
  }
  xray {
    ping: 300
    exact_name: "XRay"
    isActive: true
    reliability_alert: 60
    setBack: false
    kick: false
    alert_to_kick: 5
    check_in_verif: true
  }
  nuker {
    ping: 150
    exact_name: "Nuker"
    isActive: true
    reliability_alert: 60
    setBack: false
    kick: false
    alert_to_kick: 5
    check_in_verif: true
  }
  airjump {
    ping: 150
    exact_name: "AirJump"
    isActive: true
    reliability_alert: 60
    setBack: false
    kick: false
    alert_to_kick: 5
    check_in_verif: true
  }
  chat {
    ping: 300
    exact_name: "Chat"
    isActive: true
    reliability_alert: 60
    setBack: false
    kick: false
    alert_to_kick: 5
    check_in_verif: true
    insults: [
      "bitch"
      "asshole"
      "dickhead"
    ]
  }
  noweb {
    ping: 150
    exact_name: "NoWeb"
    isActive: true
    reliability_alert: 60
    setBack: false
    kick: false
    alert_to_kick: 5
    check_in_verif: true
  }
  critical {
    ping: 150
    exact_name: "Critical"
    isActive: true
    reliability_alert: 60
    setBack: false
    kick: false
    alert_to_kick: 5
    check_in_verif: true
  }
  inventorymove {
    ping: 150
    exact_name: "InventoryMove"
    isActive: true
    reliability_alert: 60
    setBack: false
    kick: false
    alert_to_kick: 5
    check_in_verif: true
  }
  faststairs {
    ping: 150
    exact_name: "FastStairs"
    isActive: true
    reliability_alert: 60
    setBack: false
    kick: false
    alert_to_kick: 5
    check_in_verif: true
  }
  nopitchlimit {
    ping: 150
    exact_name: "NoPitchLimit"
    isActive: true
    reliability_alert: 60
    setBack: false
    kick: false
    alert_to_kick: 5
    check_in_verif: true
  }
  special {
    mcleaks {
      kick: true
    }
    invalid_name {
      name: "Invalid Name"
      kick: true
      ban: false
      # The time of the ban, in milliseconds.
      # Default: -1 (definitive)
      ban_time: -1
    }
    max-player-by-ip {
      name: "Max Player/IP"
      # number of maximum allowed player on the same IP
      # default: 4. It means that the third people will be kicked.
      number: 4
    }
  }
}

stats: true
